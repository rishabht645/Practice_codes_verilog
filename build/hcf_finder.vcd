$date
	Tue Sep  9 00:43:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module hcf_testbench $end
$var wire 3 ! st [2:0] $end
$var wire 1 " sel_in $end
$var wire 1 # sel2 $end
$var wire 1 $ sel1 $end
$var wire 16 % result2 [15:0] $end
$var wire 16 & result1 [15:0] $end
$var wire 1 ' lt $end
$var wire 1 ( ldb $end
$var wire 1 ) lda $end
$var wire 1 * gt $end
$var wire 1 + et $end
$var wire 1 , done $end
$var reg 1 - clk $end
$var reg 16 . data_in [15:0] $end
$var reg 1 / start $end
$scope module CH $end
$var wire 1 - clk $end
$var wire 3 0 st [2:0] $end
$var wire 1 / start $end
$var wire 1 ' lt $end
$var wire 1 * gt $end
$var wire 1 + et $end
$var parameter 32 1 s0 $end
$var parameter 32 2 s1 $end
$var parameter 32 3 s2 $end
$var parameter 32 4 s3 $end
$var parameter 32 5 s4 $end
$var parameter 32 6 s5 $end
$var reg 1 , done $end
$var reg 1 ) lda $end
$var reg 1 ( ldb $end
$var reg 1 $ sel1 $end
$var reg 1 # sel2 $end
$var reg 1 " sel_in $end
$var reg 3 7 state [2:0] $end
$upscope $end
$scope module DH $end
$var wire 1 - clk $end
$var wire 16 8 data_in [15:0] $end
$var wire 1 ) lda $end
$var wire 1 ( ldb $end
$var wire 16 9 result1 [15:0] $end
$var wire 16 : result2 [15:0] $end
$var wire 1 $ sel1 $end
$var wire 1 # sel2 $end
$var wire 1 " sel_in $end
$var wire 16 ; subout [15:0] $end
$var wire 1 ' lt $end
$var wire 1 * gt $end
$var wire 1 + et $end
$var wire 16 < data [15:0] $end
$var wire 16 = bout [15:0] $end
$var wire 16 > b [15:0] $end
$var wire 16 ? aout [15:0] $end
$var wire 16 @ a [15:0] $end
$scope module A $end
$var wire 1 - clk $end
$var wire 1 ) lda $end
$var wire 16 A a [15:0] $end
$var reg 16 B aout [15:0] $end
$upscope $end
$scope module B $end
$var wire 1 - clk $end
$var wire 1 ( lda $end
$var wire 16 C a [15:0] $end
$var reg 16 D aout [15:0] $end
$upscope $end
$scope module C $end
$var wire 16 E aout [15:0] $end
$var wire 16 F bout [15:0] $end
$var wire 1 ' lt $end
$var wire 1 * gt $end
$var wire 1 + et $end
$upscope $end
$scope module M0 $end
$var wire 16 G in1 [15:0] $end
$var wire 16 H in2 [15:0] $end
$var wire 1 $ sel $end
$var wire 16 I out [15:0] $end
$upscope $end
$scope module M1 $end
$var wire 16 J in1 [15:0] $end
$var wire 16 K in2 [15:0] $end
$var wire 1 # sel $end
$var wire 16 L out [15:0] $end
$upscope $end
$scope module M2 $end
$var wire 16 M in2 [15:0] $end
$var wire 1 " sel $end
$var wire 16 N out [15:0] $end
$var wire 16 O in1 [15:0] $end
$upscope $end
$scope module S $end
$var wire 16 P a [15:0] $end
$var wire 16 Q b [15:0] $end
$var reg 16 R subout [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 6
b100 5
b11 4
b10 3
b1 2
b0 1
$end
#0
$dumpvars
b0 R
b0 Q
b0 P
b0 O
bx N
bx M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
bx C
b0 B
bx A
b0 @
b0 ?
b0 >
b0 =
bx <
b0 ;
b0 :
b0 9
bx 8
bx 7
bx 0
x/
bx .
0-
x,
1+
0*
x)
x(
0'
b0 &
b0 %
x$
x#
x"
bx !
$end
#3
1/
#5
0,
0"
0#
0$
0(
0)
b0 !
b0 0
b0 7
1-
#10
0-
#15
1)
b1 !
b1 0
b1 7
1-
#17
b111 <
b111 A
b111 C
b111 N
b111 .
b111 8
b111 M
#20
0-
#25
1(
0)
1*
0+
b111 &
b111 9
b111 ?
b111 B
b111 E
b111 G
b111 J
b10 !
b10 0
b10 7
1-
#27
b11 <
b11 A
b11 C
b11 N
b11 .
b11 8
b11 M
#30
0-
#35
b11 @
b11 I
b11 P
b11 >
b11 L
b11 Q
b11 %
b11 :
b11 =
b11 D
b11 F
b11 H
b11 K
1-
#37
b100 ;
b100 O
b100 R
b100 <
b100 A
b100 C
b100 N
b111 @
b111 I
b111 P
1"
1$
0(
1)
b100 !
b100 0
b100 7
#40
0-
#45
b1 <
b1 A
b1 C
b1 N
b1 ;
b1 O
b1 R
b100 @
b100 I
b100 P
b100 &
b100 9
b100 ?
b100 B
b100 E
b100 G
b100 J
1-
#50
0-
#55
b1111111111111110 <
b1111111111111110 A
b1111111111111110 C
b1111111111111110 N
b1111111111111110 ;
b1111111111111110 O
b1111111111111110 R
b1 @
b1 I
b1 P
1'
0*
b1 &
b1 9
b1 ?
b1 B
b1 E
b1 G
b1 J
1-
#57
b10 <
b10 A
b10 C
b10 N
b10 ;
b10 O
b10 R
b1 >
b1 L
b1 Q
b11 @
b11 I
b11 P
1#
0$
1(
0)
b11 !
b11 0
b11 7
#60
0-
#65
b1 <
b1 A
b1 C
b1 N
b1 ;
b1 O
b1 R
b10 @
b10 I
b10 P
b10 %
b10 :
b10 =
b10 D
b10 F
b10 H
b10 K
1-
#70
0-
#75
b0 <
b0 A
b0 C
b0 N
b0 ;
b0 O
b0 R
b1 @
b1 I
b1 P
0'
1+
b1 %
b1 :
b1 =
b1 D
b1 F
b1 H
b1 K
1-
#77
b11 <
b11 A
b11 C
b11 N
1,
0"
0#
0(
b101 !
b101 0
b101 7
#80
0-
#85
1-
#90
0-
#95
1-
#100
0-
#103
